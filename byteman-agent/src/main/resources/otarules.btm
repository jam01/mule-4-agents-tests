# the async http client builder is intercepted even if byteman classes are not available
# in the isolated classloader, but if they are not then instrumentation ends up failing
# this makes sure the Byteman classes are available to every isolated classloader
RULE org.mule.runtime.module.artifact.api.classloader.MuleArtifactClassLoader.<init>
CLASS org.mule.runtime.module.artifact.api.classloader.MuleArtifactClassLoader
METHOD <init>
AT EXIT
IF TRUE
DO
  $0.addURL(new URL("file:" + System.getenv("BM_HOME") + "/byteman-4.0.5.jar"));
  traceln("from byteman: installed byteman into " + $0.getArtifactId() + " MuleArtifactClassLoader")
ENDRULE

RULE com.ning.http.client.AsyncHttpClientConfig.Builder.<init>
CLASS com.ning.http.client.AsyncHttpClientConfig$Builder
METHOD <init>
AT EXIT
IF TRUE
DO
  traceln("from byteman: AsyncHttpClientConfig.Builder.<init> triggered");
ENDRULE

RULE com.ning.http.client.AsyncHttpClientConfig.Builder.build
CLASS com.ning.http.client.AsyncHttpClientConfig$Builder
METHOD build
AT ENTRY
IF TRUE
DO
  traceln("from byteman: AsyncHttpClientConfig.Builder.build triggered");
ENDRULE
